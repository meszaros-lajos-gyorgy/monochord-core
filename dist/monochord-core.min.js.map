{"version":3,"file":"monochord-core.min.js","sources":["../node_modules/ramda/src/internal/_concat.js","../node_modules/ramda/src/internal/_isPlaceholder.js","../node_modules/ramda/src/internal/_curry1.js","../node_modules/ramda/src/internal/_curry2.js","../src/index.js","../node_modules/ramda/src/internal/_curry3.js","../node_modules/ramda/src/adjust.js","../node_modules/ramda/src/negate.js","../node_modules/ramda/src/not.js"],"sourcesContent":["/**\n * Private `concat` function to merge two array-like objects.\n *\n * @private\n * @param {Array|Arguments} [set1=[]] An array-like object.\n * @param {Array|Arguments} [set2=[]] An array-like object.\n * @return {Array} A new, merged array.\n * @example\n *\n *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n */\nmodule.exports = function _concat(set1, set2) {\n  set1 = set1 || [];\n  set2 = set2 || [];\n  var idx;\n  var len1 = set1.length;\n  var len2 = set2.length;\n  var result = [];\n\n  idx = 0;\n  while (idx < len1) {\n    result[result.length] = set1[idx];\n    idx += 1;\n  }\n  idx = 0;\n  while (idx < len2) {\n    result[result.length] = set2[idx];\n    idx += 1;\n  }\n  return result;\n};\n","module.exports = function _isPlaceholder(a) {\n  return a != null &&\n         typeof a === 'object' &&\n         a['@@functional/placeholder'] === true;\n};\n","var _isPlaceholder = require('./_isPlaceholder');\n\n\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nmodule.exports = function _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n};\n","var _curry1 = require('./_curry1');\nvar _isPlaceholder = require('./_isPlaceholder');\n\n\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nmodule.exports = function _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n      case 1:\n        return _isPlaceholder(a) ? f2\n             : _curry1(function(_b) { return fn(a, _b); });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2\n             : _isPlaceholder(a) ? _curry1(function(_a) { return fn(_a, b); })\n             : _isPlaceholder(b) ? _curry1(function(_b) { return fn(a, _b); })\n             : fn(a, b);\n    }\n  };\n};\n","import {\r\n\r\n} from './math'\r\n\r\nclass MonochordCore {\r\n  constructor () {\r\n    this.baseVolume = 0\r\n    this.baseFrequency = 440\r\n  }\r\n\r\n  setBaseFrequency (newFrequency, keyNote) {\r\n    this.baseFrequency = newFrequency\r\n  }\r\n}\r\n\r\nconst monochordCore = new MonochordCore()\r\n\r\nexport default monochordCore\r\n","var _curry1 = require('./_curry1');\nvar _curry2 = require('./_curry2');\nvar _isPlaceholder = require('./_isPlaceholder');\n\n\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nmodule.exports = function _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n      case 1:\n        return _isPlaceholder(a) ? f3\n             : _curry2(function(_b, _c) { return fn(a, _b, _c); });\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3\n             : _isPlaceholder(a) ? _curry2(function(_a, _c) { return fn(_a, b, _c); })\n             : _isPlaceholder(b) ? _curry2(function(_b, _c) { return fn(a, _b, _c); })\n             : _curry1(function(_c) { return fn(a, b, _c); });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3\n             : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function(_a, _b) { return fn(_a, _b, c); })\n             : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function(_a, _c) { return fn(_a, b, _c); })\n             : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function(_b, _c) { return fn(a, _b, _c); })\n             : _isPlaceholder(a) ? _curry1(function(_a) { return fn(_a, b, c); })\n             : _isPlaceholder(b) ? _curry1(function(_b) { return fn(a, _b, c); })\n             : _isPlaceholder(c) ? _curry1(function(_c) { return fn(a, b, _c); })\n             : fn(a, b, c);\n    }\n  };\n};\n","var _concat = require('./internal/_concat');\nvar _curry3 = require('./internal/_curry3');\n\n\n/**\n * Applies a function to the value at the given index of an array, returning a\n * new copy of the array with the element at the given index replaced with the\n * result of the function application.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig (a -> a) -> Number -> [a] -> [a]\n * @param {Function} fn The function to apply.\n * @param {Number} idx The index.\n * @param {Array|Arguments} list An array-like object whose value\n *        at the supplied index will be replaced.\n * @return {Array} A copy of the supplied array-like object with\n *         the element at index `idx` replaced with the value\n *         returned by applying `fn` to the existing element.\n * @see R.update\n * @example\n *\n *      R.adjust(R.add(10), 1, [1, 2, 3]);     //=> [1, 12, 3]\n *      R.adjust(R.add(10))(1)([1, 2, 3]);     //=> [1, 12, 3]\n * @symb R.adjust(f, -1, [a, b]) = [a, f(b)]\n * @symb R.adjust(f, 0, [a, b]) = [f(a), b]\n */\nmodule.exports = _curry3(function adjust(fn, idx, list) {\n  if (idx >= list.length || idx < -list.length) {\n    return list;\n  }\n  var start = idx < 0 ? list.length : 0;\n  var _idx = start + idx;\n  var _list = _concat(list);\n  _list[_idx] = fn(list[_idx]);\n  return _list;\n});\n","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Negates its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number}\n * @example\n *\n *      R.negate(42); //=> -42\n */\nmodule.exports = _curry1(function negate(n) { return -n; });\n","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * A function that returns the `!` of its argument. It will return `true` when\n * passed false-y value, and `false` when passed a truth-y one.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig * -> Boolean\n * @param {*} a any value\n * @return {Boolean} the logical inverse of passed argument.\n * @see R.complement\n * @example\n *\n *      R.not(true); //=> false\n *      R.not(false); //=> true\n *      R.not(0); //=> true\n *      R.not(1); //=> false\n */\nmodule.exports = _curry1(function not(a) {\n  return !a;\n});\n"],"names":["set1","set2","idx","len1","length","len2","result","a","fn","f1","arguments","_isPlaceholder","apply","this","f2","b","_curry1","_b","_a","MonochordCore","list","start","_idx","_list","_concat","n","baseVolume","baseFrequency","setBaseFrequency","newFrequency","keyNote"],"mappings":";wLAWA,OAAiB,SAAiBA,EAAMC,GACtCD,EAAOA,MACPC,EAAOA,KACP,IAAIC,GACAC,EAAOH,EAAKI,OACZC,EAAOJ,EAAKG,OACZE,IAGJ,KADAJ,EAAM,EACCA,EAAMC,GACXG,EAAOA,EAAOF,QAAUJ,EAAKE,GAC7BA,GAAO,CAGT,KADAA,EAAM,EACCA,EAAMG,GACXC,EAAOA,EAAOF,QAAUH,EAAKC,GAC7BA,GAAO,CAET,OAAOI,MC7BQ,SAAwBC,GACvC,MAAY,OAALA,GACa,gBAANA,KAC2B,IAAlCA,EAAE,+BCQM,SAAiBC,GAChC,MAAO,SAASC,GAAGF,GACjB,MAAyB,KAArBG,UAAUN,QAAgBO,EAAeJ,GACpCE,EAEAD,EAAGI,MAAMC,KAAMH,eCJX,SAAiBF,GAChC,MAAO,SAASM,GAAGP,EAAGQ,GACpB,OAAQL,UAAUN,QAChB,IAAK,GACH,MAAOU,EACT,KAAK,GACH,MAAOH,GAAeJ,GAAKO,EACpBE,EAAQ,SAASC,GAAM,MAAOT,GAAGD,EAAGU,IAC7C,SACE,MAAON,GAAeJ,IAAMI,EAAeI,GAAKD,EACzCH,EAAeJ,GAAKS,EAAQ,SAASE,GAAM,MAAOV,GAAGU,EAAIH,KACzDJ,EAAeI,GAAKC,EAAQ,SAASC,GAAM,MAAOT,GAAGD,EAAGU,KACxDT,EAAGD,EAAGQ,MCpBfI,GCSW,SAAiBX,KCgBT,SAAgBA,EAAIN,EAAKkB,GAChD,GAAIlB,GAAOkB,EAAKhB,QAAUF,GAAOkB,EAAKhB,OACpC,MAAOgB,EAET,IAAIC,GAAQnB,EAAM,EAAIkB,EAAKhB,OAAS,EAChCkB,EAAOD,EAAQnB,EACfqB,EAAQC,EAAQJ,EAEpB,OADAG,GAAMD,GAAQd,EAAGY,EAAKE,IACfC,ICpBQP,EAAQ,SAAgBS,GAAK,OAAQA,ICKrCT,EAAQ,SAAaT,GACpC,OAAQA,IJnBU,WAElBM,KAAOa,WAAa,EACpBb,KAAOc,cAAgB,YAGzBR,aAAES,0BAAkBC,EAAcC,GAChCjB,KAAOc,cAAgBE,GAIH,GAAIV"}